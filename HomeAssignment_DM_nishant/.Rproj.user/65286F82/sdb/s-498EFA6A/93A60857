{
    "collab_server" : "",
    "contents" : "mydistfun<- function(element1,element2,metricf){\n  # this function returns the distace between the element1 and element2\n  # according to the metricf\n  \n  dimensions=length(element1)\n  sqd<-matrix(,dimensions,1)\n\n  if (metricf==\"eucledean\"){\n  #eucledean\n  for(i in seq(along=element1)){\n    \n    sqd[i]<-(element1[i]-element2[i])^2\n  }\n  dist<-sqrt(colSums(sqd))\n  \n  }\n  if (metricf==\"manhattan\"){\n  #manhattan\n  for(i in seq(along=element1)){\n    sqd[i]<-abs(element1[i]-element2[i])\n  }\n  dist<-colSums(sqd)\n  }\n  \n  if(metricf==\"chebyshev\"){\n    for(i in seq(along=element1)){\n      sqd[i]<-abs(element1[i]-element2[i])\n    }\n    dist<-max(sqd)\n  }\n  #Minkowski \n  if (metricf==\"minkowski\")\n  {\n    myInp<-readline(\"What is the value of p?\")\n    p<-as.integer(myInp)\n    if(p==3){\n      for (i in seq_along(element1)){\n        sqd[i]<- (abs(element1[i]-element2[i]))^3\n      }\n      dist<- (colSums(sqd)^(1/3))\n    }\n    else if(p==4){\n      for (i in seq_along(element1)){\n        sqd[i]<- (abs(element1[i]-element2[i]))^4\n      }\n      dist<- (colSums(sqd)^(1/4))\n    }\n    else(p==5){\n      for (i in seq_along(element1)){\n        sqd[i]<- (abs(element1[i]-element2[i]))^5\n      }\n      dist<- (colSums(sqd)^(1/5))\n    }\n  }\n  #canberra\n  if (metricf==\"canberra\"){\n    for (i in seq_along(element1)){\n      \n      sqd[i]<- ((abs(element1[i]-element2[i]))/((abs(element1[i]))+(abs(element2[i]))))\n    }\n    dist<- colSums(sqd)\n  }\n   return(dist)\n}\n\n  ",
    "created" : 1507491237077.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1401160034",
    "id" : "93A60857",
    "lastKnownWriteTime" : 1507506642,
    "last_content_update" : 1507506642241,
    "path" : "~/3rd_sem/DataMining/Home Assignment/HomeAssignment_DM_nishant/mydistfun.R",
    "project_path" : "mydistfun.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}